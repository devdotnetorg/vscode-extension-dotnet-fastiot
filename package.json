{
	"name": "vscode-extension-dotnet-fastiot",
	"displayName": ".NET FastIoT",
	"description": "Configuring Remote Debugging of a .NET application for embedded Linux devices",
	"icon": "assets/fastiot-logo-256.png",
	"license": "LGPL-3.0-only",
	"preview": true,
	"version": "0.5.0",
	"publisher": "devdotnetorg",
	"private": "false",
	"identity": {
		"internalName": "vscode-extension-dotnet-fastiot"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"dotnet",
		"C#",
		"IoT",
		"Linux",
		"Embedded",
		"Raspberry",
		"Remote",
		"Debug"
	],
	"engines": {
		"vscode": "^1.78.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot.git"
	},
	"homepage": "https://devdotnet.org",
	"bugs": {
		"url": "https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/issues",
		"email": "fastiot@devdotnet.org"
	},
	"os": [
		"win32"
	],
	"recommendations": [
		"ms-dotnettools.csharp",
		"aliasadidev.nugetpackagemanagergui",
		"plorefice.devicetree",
		"IBM.output-colorizer"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"title": ".NET FastIoT",
				"properties": {
					"fastiot.device.account.username": {
						"type": "string",
						"default": "debugvscode",
						"markdownDescription": "[deprecated] Debug account name. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.account.debug.username": {
						"type": "string",
						"default": "debugvscode",
						"markdownDescription": "Debug account name. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.device.account.group": {
						"type": "string",
						"default": "sudo",
						"markdownDescription": "[deprecated] Linux group for a new user (debugvscode) of a development device. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.account.debug.groups": {
						"type": "string",
						"default": "gpio, video, i2c, spi, spidev, kmem, tty, dialout, input, audio",
						"markdownDescription": "Linux groups for a new user (`#fastiot.sbc.account.debug.username#`) of a single-board computer. Groups are separated by the symbol \"`,`\". For example: `gpio, video, i2c`. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.account.management.username": {
						"type": "string",
						"default": "managementvscode",
						"markdownDescription": "Management account name. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.account.management.groups": {
						"type": "string",
						"default": "sudo",
						"markdownDescription": "Linux groups for a new user (`#fastiot.sbc.account.management.username#`) of a single-board computer. Groups are separated by the symbol \"`,`\". For example: `sudo, group1, group2`. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.device.applicationdatafolder": {
						"type": "string",
						"default": "",
						"markdownDescription": "[deprecated] Shared folder for storing keys, templates. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.applicationdata.folder": {
						"type": "string",
						"default": "",
						"markdownDescription": "Shared folder for storing keys, templates. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.ssh.keytype": {
						"type": "string",
						"enum": [
							"ed25519-256",
							"ecdsa-256",
							"ecdsa-384",
							"ecdsa-521",
							"rsa-1024",
							"rsa-2048",
							"rsa-3072",
							"rsa-4096"
						],
						"default": "ed25519-256",
						"markdownDescription": "Type of key generation algorithm for ssh. Used to authenticate with a single-board computer after it has been added to the single-board computer list. Learn more about key algorithms see [How To Set Up SSH Keys](https://goteleport.com/blog/how-to-set-up-ssh-keys/). If you use the rsa key type, then you need to add the `PubkeyAcceptedAlgorithms=+ssh-rsa` line to the `/etc/ssh/sshd_config` file. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.ssh.key.customtype": {
						"type": "string",
						"default": "",
						"markdownDescription": "Custom type of key generation algorithm for ssh. Replaces `#fastiot.sbc.ssh.keytype#`. For example `ed25519`. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.ssh.key.custombits": {
						"type": "number",
						"default": 0,
						"markdownDescription": "Custom key length in bits. Replaces `#fastiot.sbc.ssh.keytype#`. For example `256`. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.sbc.debug.app.folder": {
						"type": "string",
						"default": "~/fastiot/debugapps",
						"markdownDescription": "Folder to put debug apps on the single-board computer. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.launch.templatetitle": {
						"type": "string",
						"default": "Launch on %{device.label} (%{project.name}, %{device.board.name}, %{device.user.debug})",
						"markdownDescription": "Template for creating a launch title. Variable names see [link](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Launch-title-template.md)."
					},
					"fastiot.device.all.JSON": {
						"type": "object",
						"default": {},
						"description": "[deprecated] Configuration of all devices in JSON format."
					},
					"fastiot.sbc.profiles.JSON": {
						"type": "object",
						"default": {},
						"description": "Configuration of all single-board computers in JSON format."
					},
					"fastiot.sbc.udevfilename": {
						"type": "string",
						"default": "20-gpio-fastiot.rules",
						"markdownDescription": "Udev rules (device permissions) name file for devices like GPIO. More details in [Linux udev](https://wiki.loliot.net/docs/linux/linux-tools/linux-udev/). File from `%userprofile%\\fastiot\\settings\\udevrules` directory."
					},
					"fastiot.entities.isupdate": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Update templates. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.entities.updateinterval": {
						"type": "number",
						"default": 24,
						"enum": [
							1,
							24,
							72,
							168
						],
						"enumItemLabels": [
							"1 hour",
							"1 day",
							"3 days",
							"1 week"
						],
						"markdownDescription": "Update interval for templates. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.template.loadonstart": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Load templates on extension start (false, speeds up the start of the extension). See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.defaultprojectfolder": {
						"type": "string",
						"default": "",
						"markdownDescription": "Default folder for storing projects. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.template.community.updatesource": {
						"type": "string",
						"default": "",
						"markdownDescription": "Update source for community project templates. Sources are separated by the symbol \"`;`\". For example: `htts://url1/list.yaml;htts://url2/list.yaml`. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.config.JSON": {
						"type": "object",
						"default": {},
						"description": "Technical built-in config."
					},
					"fastiot.entities.debug": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Debug mode. Used to debug templates. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					},
					"fastiot.loglevel": {
						"type": "number",
						"default": 2,
						"enum": [
							0,
							1,
							2,
							3,
							4
						],
						"enumItemLabels": [
							"Trace",
							"Debug",
							"Information",
							"Warning",
							"Error"
						],
						"enumDescriptions": [
							"Logs that contain the most detailed messages.",
							"Logs that are used for interactive investigation during development.",
							"Logs that track the general flow of the application.",
							"Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.",
							"Logs that highlight when the current flow of execution is stopped due to a failure."
						],
						"markdownDescription": "Defines logging severity levels. See [Extension settings](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Extension-settings.md)."
					}
				}
			}
		],
		"commands": [
			{
				"command": "viewSBCs.AddSbc",
				"title": "Add ...",
				"category": "FastIoT",
				"icon": "$(add)"
			},
			{
				"command": "viewSBCs.AddSbcExtMode",
				"title": "Add ... (extended mode)",
				"category": "FastIoT",
				"icon": "$(diff-added)"
			},
			{
				"command": "viewSBCs.DiscoverySbc",
				"title": "Discovery",
				"category": "FastIoT",
				"icon": "$(search)"
			},
			{
				"command": "viewSBCs.RefreshDevices",
				"title": "Refresh"
			},
			{
				"command": "viewSBCs.ExportDevices",
				"title": "Export"
			},
			{
				"command": "viewSBCs.ImportDevices",
				"title": "Import"
			},
			{
				"command": "viewSBCs.RenameDevice",
				"title": "Rename"
			},
			{
				"command": "viewSBCs.DeleteDevice",
				"title": "Delete"
			},
			{
				"command": "viewSBCs.ConnectionTestDevice",
				"title": "Connection test"
			},
			{
				"command": "viewSBCs.RebootDevice",
				"title": "Reboot"
			},
			{
				"command": "viewSBCs.ShutdownDevice",
				"title": "Shutdown"
			},
			{
				"command": "viewSBCs.OpenSshTerminal",
				"title": "Open SSH terminal"
			},
			{
				"command": "viewSBCs.CopyToClipboard",
				"title": "Copy to Clipboard"
			},
			{
				"command": "viewSBCs.CheckAllPackages",
				"title": "Check all packages",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "viewSBCs.InstallationPackage",
				"title": "Package installation",
				"icon": {
					"light": "resources/light/setup.svg",
					"dark": "resources/dark/setup.svg"
				}
			},
			{
				"command": "viewSBCs.UpgradePackage",
				"title": "Upgrade"
			},
			{
				"command": "viewSBCs.RemovePackage",
				"title": "Remove"
			},
			{
				"command": "viewSBCs.TestPackage",
				"title": "Test"
			},
			{
				"command": "viewSBCs.UpdateDTO",
				"title": "Update DTO",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "viewSBCs.AddDTO",
				"title": "Add DTO",
				"icon": "$(add)"
			},
			{
				"command": "viewSBCs.DeleteDTO",
				"title": "Delete DTO"
			},
			{
				"command": "viewSBCs.EnableDTO",
				"title": "Enable DTO",
				"icon": {
					"light": "resources/light/include.svg",
					"dark": "resources/dark/include.svg"
				}
			},
			{
				"command": "viewSBCs.DisableDTO",
				"title": "Disable DTO",
				"icon": {
					"light": "resources/light/exclude.svg",
					"dark": "resources/dark/exclude.svg"
				}
			},
			{
				"command": "viewSBCs.DetectGpiochips",
				"title": "GPIO detect",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "viewSBCs.OpenFolderSshKeys",
				"title": "Open folder with ssh keys",
				"category": "FastIoT"
			},
			{
				"command": "viewLaunchs.Add",
				"title": "Add ...",
				"category": "FastIoT",
				"icon": "$(add)"
			},
			{
				"command": "viewLaunchs.Refresh",
				"title": "Refresh"
			},
			{
				"command": "viewLaunchs.Rename",
				"title": "Rename"
			},
			{
				"command": "viewLaunchs.Delete",
				"title": "Delete"
			},
			{
				"command": "viewLaunchs.Rebuild",
				"title": "Rebuild"
			},
			{
				"command": "viewLaunchs.GoToDevice",
				"title": "Go to device"
			},
			{
				"command": "viewLaunchs.AddEnviroment",
				"title": "Add Enviroment",
				"icon": "$(add)"
			},
			{
				"command": "viewLaunchs.RenameEnviroment",
				"title": "Rename"
			},
			{
				"command": "viewLaunchs.EditEnviroment",
				"title": "Edit"
			},
			{
				"command": "viewLaunchs.DeleteEnviroment",
				"title": "Delete"
			},
			{
				"command": "viewLaunchs.ChangeOption",
				"title": "Change",
				"icon": "$(edit)"
			},
			{
				"command": "viewTemplates.ReloadTemplates",
				"title": "Reload templates",
				"category": "FastIoT"
			},
			{
				"command": "viewTemplates.OpenTemplateFolder",
				"title": "Open template folder",
				"category": "FastIoT"
			},
			{
				"command": "viewTemplates.ImportTemplate",
				"title": "Import template",
				"category": "FastIoT"
			},
			{
				"command": "viewTemplates.RestoreSystemTemplates",
				"title": "Restore/upgrade system templates (offline)",
				"category": "FastIoT"
			},
			{
				"command": "viewTemplates.CreateProject",
				"title": "Create project",
				"category": "FastIoT"
			}
		],
		"keybindings": [
			{
				"command": "viewSBCs.AddSbc",
				"key": "ctrl+f1",
				"mac": "cmd+f1"
			},
			{
				"command": "viewTemplates.CreateProject",
				"key": "ctrl+f2",
				"mac": "cmd+f2"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "bar-sbc-explorer",
					"title": ".NET FastIoT",
					"icon": "assets/fastiot.svg"
				}
			]
		},
		"views": {
			"bar-sbc-explorer": [
				{
					"id": "viewSBCs",
					"name": "Boards",
					"contextualTitle": "Single-board computers"
				},
				{
					"id": "viewLaunchs",
					"name": "Launchs",
					"contextualTitle": "Launchs"
				},
				{
					"id": "viewTemplates",
					"name": "Templates",
					"contextualTitle": "Templates",
					"visibility": "collapsed"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "viewSBCs.AddSbc",
					"when": "view == viewSBCs",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.AddSbcExtMode",
					"when": "view == viewSBCs",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.DiscoverySbc",
					"when": "view == viewSBCs",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.RefreshDevices",
					"when": "view == viewSBCs",
					"group": "7_modification"
				},
				{
					"command": "viewSBCs.ExportDevices",
					"when": "view == viewSBCs",
					"group": "7_modification"
				},
				{
					"command": "viewSBCs.ImportDevices",
					"when": "view == viewSBCs",
					"group": "7_modification"
				},
				{
					"command": "viewSBCs.OpenFolderSshKeys",
					"when": "view == viewSBCs",
					"group": "2_workspace"
				},
				{
					"command": "viewLaunchs.Add",
					"when": "view == viewLaunchs",
					"group": "navigation"
				},
				{
					"command": "viewLaunchs.Refresh",
					"when": "view == viewLaunchs"
				},
				{
					"command": "viewTemplates.ReloadTemplates",
					"when": "view == viewTemplates",
					"group": "2_workspace"
				},
				{
					"command": "viewTemplates.RestoreSystemTemplates",
					"when": "view == viewTemplates",
					"group": "2_workspace"
				},
				{
					"command": "viewTemplates.ImportTemplate",
					"when": "view == viewTemplates",
					"group": "7_modification"
				},
				{
					"command": "viewTemplates.OpenTemplateFolder",
					"when": "view == viewTemplates",
					"group": "7_modification"
				}
			],
			"view/item/context": [
				{
					"command": "viewSBCs.RenameDevice",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "5_cutcopypaste"
				},
				{
					"command": "viewSBCs.DeleteDevice",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "5_cutcopypaste"
				},
				{
					"command": "viewSBCs.ConnectionTestDevice",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.RebootDevice",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "7_modification"
				},
				{
					"command": "viewSBCs.ShutdownDevice",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "7_modification"
				},
				{
					"command": "viewSBCs.OpenSshTerminal",
					"when": "view == viewSBCs && viewItem == iotdevice",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.CopyToClipboard",
					"when": "view == viewSBCs && viewItem == iotitemtree",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.CheckAllPackages",
					"when": "view == viewSBCs && viewItem == iotpackages",
					"group": "inline"
				},
				{
					"command": "viewSBCs.InstallationPackage",
					"when": "view == viewSBCs && viewItem == iotpackages_not_installed",
					"group": "inline"
				},
				{
					"command": "viewSBCs.UpgradePackage",
					"when": "view == viewSBCs && viewItem == iotpackage_installed"
				},
				{
					"command": "viewSBCs.RemovePackage",
					"when": "view == viewSBCs && viewItem == iotpackage_installed"
				},
				{
					"command": "viewSBCs.TestPackage",
					"when": "view == viewSBCs && viewItem == iotpackage_installed"
				},
				{
					"command": "viewSBCs.CopyToClipboard",
					"when": "view == viewSBCs && viewItem == iotpackage_installed",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.UpdateDTO",
					"when": "view == viewSBCs && viewItem == iotdtos",
					"group": "inline"
				},
				{
					"command": "viewSBCs.AddDTO",
					"when": "view == viewSBCs && viewItem == iotdtos",
					"group": "inline"
				},
				{
					"command": "viewSBCs.DeleteDTO",
					"when": "view == viewSBCs && viewItem == iotdto_off"
				},
				{
					"command": "viewSBCs.EnableDTO",
					"when": "view == viewSBCs && viewItem == iotdto_off",
					"group": "inline"
				},
				{
					"command": "viewSBCs.DisableDTO",
					"when": "view == viewSBCs && viewItem == iotdto_on",
					"group": "inline"
				},
				{
					"command": "viewSBCs.DetectGpiochips",
					"when": "view == viewSBCs && viewItem == iotgpios",
					"group": "inline"
				},
				{
					"command": "viewLaunchs.Rename",
					"when": "view == viewLaunchs && viewItem == iotlaunch",
					"group": "5_cutcopypaste"
				},
				{
					"command": "viewLaunchs.Delete",
					"when": "view == viewLaunchs && viewItem == iotlaunch",
					"group": "5_cutcopypaste"
				},
				{
					"command": "viewLaunchs.Rebuild",
					"when": "view == viewLaunchs && viewItem == iotlaunch",
					"group": "7_modification"
				},
				{
					"command": "viewLaunchs.GoToDevice",
					"when": "view == viewLaunchs && viewItem == iotlaunch",
					"group": "navigation"
				},
				{
					"command": "viewLaunchs.AddEnviroment",
					"when": "view == viewLaunchs && viewItem == iotenviroment",
					"group": "inline"
				},
				{
					"command": "viewLaunchs.RenameEnviroment",
					"when": "view == viewLaunchs && viewItem == iotenviromentitem"
				},
				{
					"command": "viewLaunchs.EditEnviroment",
					"when": "view == viewLaunchs && viewItem == iotenviromentitem"
				},
				{
					"command": "viewLaunchs.ChangeOption",
					"when": "view == viewLaunchs && viewItem == iotlaunchoption",
					"group": "inline"
				},
				{
					"command": "viewLaunchs.DeleteEnviroment",
					"when": "view == viewLaunchs && viewItem == iotenviromentitem"
				},
				{
					"command": "viewSBCs.CopyToClipboard",
					"when": "view == viewLaunchs && viewItem == iotenviromentitem",
					"group": "navigation"
				},
				{
					"command": "viewSBCs.CopyToClipboard",
					"when": "view == viewLaunchs && viewItem == iotenviromentoption",
					"group": "navigation"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "viewSBCs",
				"contents": "No devices. How to add device see [Adding a device](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Getting-started.md#step-2---adding-a-device).\n[Add Device](command:viewSBCs.AddSbc)"
			},
			{
				"view": "viewLaunchs",
				"contents": "No launchs. How to add Launch see [Adding Launch](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Additional-materials.md#setting-up-an-existing-project-for-remote-debugging).\n[Add Launch](command:viewLaunchs.Add)"
			},
			{
				"view": "viewTemplates",
				"contents": "[Create project](command:viewTemplates.CreateProject)\n About [Project Templates](https://github.com/devdotnetorg/vscode-extension-dotnet-fastiot/blob/master/docs/Project-templates.md)."
			},
			{
				"view": "workbench.explorer.emptyView",
				"contents": ".NET FastIoT\n[Create project](command:viewTemplates.CreateProject)"
			},
			{
				"view": "workbench.explorer.emptyView",
				"contents": "[Add device](command:viewSBCs.AddSbc)"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "node ./esbuild.js && tsc -p ./",
		"watch": "node ./esbuild.js && tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@microsoft/fast-foundation": "^2.49.0",
		"@types/adm-zip": "^0.5.0",
		"@types/fs-extra": "^11.0.1",
		"@types/glob": "^8.1.0",
		"@types/ip": "^1.1.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "16.x",
		"@types/ssh2": "^1.11.13",
		"@types/tcp-port-used": "^1.0.1",
		"@types/uuid": "^9.0.1",
		"@types/vscode": "^1.78.0",
		"@typescript-eslint/eslint-plugin": "^5.59.1",
		"@typescript-eslint/parser": "^5.59.1",
		"@vscode/codicons": "^0.0.33",
		"esbuild": "^0.16.10",
		"esbuild-plugin-copy": "^2.0.1",
		"eslint": "^8.39.0",
		"glob": "^8.1.0",
		"mocha": "^10.2.0",
		"prettier": "^3.0.0",
		"typescript": "^5.0.4",
		"vscode-test": "^1.5.2"
	},
	"dependencies": {
		"@bendera/vscode-webview-elements": "^0.14.0",
		"@lolpants/pingman": "^1.0.6",
		"@types/ssh2-streams": "^0.1.9",
		"@types/vscode-webview": "^1.57.1",
		"@vscode/webview-ui-toolkit": "^1.2.2",
		"adm-zip": "^0.5.10",
		"axios": "^1.4.0",
		"compare-versions": "^6.0.0",
		"fs-extra": "^11.1.1",
		"ip": "^1.1.8",
		"local-devices": "^4.0.0",
		"pingman": "^2.0.0",
		"platform-folders": "^0.6.0",
		"ssh2": "^1.14.0",
		"ssh2-promise": "^1.0.3",
		"tcp-port-used": "^1.0.2",
		"utimes": "^5.1.1",
		"uuid": "^9.0.0",
		"xmldom": "^0.6.0",
		"xpath": "0.0.32",
		"yaml": "^2.3.1",
		"yaml-schema-validator-fork": "^0.2.0"
	}
}
